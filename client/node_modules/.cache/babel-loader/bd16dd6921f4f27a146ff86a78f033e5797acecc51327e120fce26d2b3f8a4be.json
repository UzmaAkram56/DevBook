{"ast":null,"code":"var _jsxFileName = \"/Users/app/Downloads/dev-book-master (2)/dev-book-master/client/src/components/post/CommentItem.js\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { deleteComment } from \"../../actions/post\";\nimport formatDate from \"../../utils/formatDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentItem = ({\n  postId,\n  comment: {\n    _id,\n    text,\n    name,\n    avatar,\n    userProfileImage,\n    user,\n    date\n  },\n  auth,\n  deleteComment\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  class: \"post bg-white p-1 my-1\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/profile/${user}`,\n      children: [userProfileImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000/${userProfileImage}`,\n        alt: \"Preview\",\n        className: \"image-preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatar,\n        alt: \"Github DP instead of Gravatar\",\n        className: \"round-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"my-1\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-date\",\n      children: [\"Posted on \", formatDate(date)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => deleteComment(postId, _id),\n      type: \"button\",\n      className: \"btn btn-danger\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n_c = CommentItem;\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps, {\n  deleteComment\n})(CommentItem);\nvar _c;\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"names":["PropTypes","Link","connect","deleteComment","formatDate","jsxDEV","_jsxDEV","CommentItem","postId","comment","_id","text","name","avatar","userProfileImage","user","date","auth","class","children","to","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","loading","onClick","e","type","_c","propTypes","number","isRequired","object","func","mapStateToProps","state","$RefreshReg$"],"sources":["/Users/app/Downloads/dev-book-master (2)/dev-book-master/client/src/components/post/CommentItem.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { deleteComment } from \"../../actions/post\";\nimport formatDate from \"../../utils/formatDate\";\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, userProfileImage, user, date },\n  auth,\n  deleteComment,\n}) => (\n  <div class=\"post bg-white p-1 my-1\">\n    <div>\n      <Link to={`/profile/${user}`}>\n        {userProfileImage ? (\n          <img\n            src={`http://localhost:5000/${userProfileImage}`}\n            alt=\"Preview\"\n            className=\"image-preview\"\n          />\n        ) : (\n          <img\n            src={avatar}\n            alt=\"Github DP instead of Gravatar\"\n            className=\"round-img\"\n          />\n        )}\n\n        <h4>{name}</h4>\n      </Link>\n    </div>\n\n    <div>\n      <p class=\"my-1\">{text}</p>\n\n      <p className=\"post-date\">Posted on {formatDate(date)}</p>\n\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={(e) => deleteComment(postId, _id)}\n          type=\"button\"\n          className=\"btn btn-danger\"\n        >\n          <i className=\"fas fa-times\" />\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ auth: state.auth });\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}